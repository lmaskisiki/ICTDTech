package birthtech.services;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import birthtech.entities.Checkup;
import birthtech.entities.Martenal;
import birthtech.interfaces.ICheckupService;
import birthtech.repositories.CheckupRepository;

@Service
public class CheckupService implements ICheckupService {
	@Autowired
	private CheckupRepository repo;

	@Autowired
	private MartenalService MartenalService;

	@Override
	public boolean addCheckup(boolean delivered, int martenal, String nurse,
			String place, String comment) {
		Checkup checkup = new Checkup();
		checkup.setMartenalId(martenal);
		checkup.setDelivered(delivered);
		checkup.setNurse(nurse);
		checkup.setPlace(place);
		checkup.setComments(comment);
		repo.save(checkup);
		return false;
	}

	@Override
	public List<Checkup> getCheckups() {
		// TODO Auto-generated method stub
		return repo.findAll();
	}

	@Override
	public List<Checkup> getCheckups(int key) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Checkup> getCheckups(String fullname) {
		List<Checkup> checkups = repo.findAll();
		List<Checkup> checkupsFound = new ArrayList<Checkup>();
		if (checkups != null) {
			for (Checkup checkup : checkups) {
				checkupsFound.add(checkup);
			}
		}
		return checkupsFound;
	}

	@Override
	public Checkup getCheckup(int key) {
		List<Checkup> checkups = repo.findAll();
		List<Checkup> checkupsFound = new ArrayList<Checkup>();
		if (checkups != null) {
			for (Checkup checkup : checkups) {
				if (checkup.getCheckupId() == key) {
					checkupsFound.add(checkup);
				}

			}
		}
		return checkupsFound.get(0);
	}

	@Override
	public Checkup getCheckup(String fullname) {
		int martenalId = 0;
		Checkup checkup = null;
		List<Martenal> martenal = MartenalService.getMartenal();
		for (Martenal mat : martenal) {
			if ((mat.getNames() + " " + mat.getSurname()).equals(fullname)
					|| (mat.getSurname() + " " + mat.getSurname())
							.equals(fullname)) {
				martenalId = 20;//mat.getPid();
				System.out.println("ID found :"+martenalId);
				repo.findOne(martenalId);
				break;
			}
		}
		System.out.println(checkup == null ? "Check is null "
				: "Check up is not null");
		return checkup;
	}
}
