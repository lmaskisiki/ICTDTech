package sessionBeans;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.apache.commons.net.ftp.FTPClient;

import entities.FileInfo;
import ftp.FTPConnection;

/**
 * Session Bean implementation class FileService
 */
@Stateless
@LocalBean
public class FileService implements FileServiceRemote, FileServiceLocal {

	@PersistenceContext(unitName = "DocMan")
	private EntityManager em;

	/**
	 * Default constructor.
	 */
	public FileService() {
		// TODO Auto-generated constructor stub
	}

	@Override
	public boolean addFile(FileInfo file, String fileSource, InputStream is) {
		FTPClient ftpClient = new FTPConnection().connect();
		InputStream ins = is;
		boolean done = false;
		try {
			System.out.println("Start uploading first file");
			boolean newdir = ftpClient.makeDirectory(file.getFilePath());
			String filePath = file.getUploadedBy() + "/" + file.getFileName()
					+ ".pdf";
			System.out.println("File Path:" + filePath);
			done = ftpClient.storeFile(filePath, ins);
			ins.close();
			if (done) {
				file.setFilePath(filePath);
				em.persist(file);
			}

		} catch (FileNotFoundException e) {
			System.out.println("SOmething is wrong1");
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println("SOmething is wrong2");
			e.printStackTrace();
		}
		if (done) {
			System.out.println("File was successfully uploaded!!!");
		} else {
			System.out.println("Something went wrong :( ");
		}

		return false;
	}

	@Override
	public FileInfo findByName(String fileOnwer, String fileName) {
		System.out
				.println("\n \n \n\n\n \n Enter find method  FUCK THIS SHITTTTT \n\n\n");

		String filePath = fileOnwer + "/" + fileName;
		FTPClient ftpClient = new FTPConnection().connect();
		String remoteFile = fileOnwer + "/" + fileName + "";
		File download = new File("/home/Desktop/" + fileName + ".pdf");
		try {
			OutputStream os = new BufferedOutputStream(new FileOutputStream(
					download));
			Boolean success = ftpClient.retrieveFile(remoteFile, os);
			System.out.println("\n \n \n\n\n \n WHATTTTT \n\n\n" + success
					+ ": " + remoteFile);

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public boolean updateFile(int key, FileInfo info) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeFile(int key) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<FileInfo> getFiles() {
		System.out.println("Start get file one");

	 
	FileInfo f2=em.find(FileInfo.class, 2);
	System.out.println("file 1 done");

	FileInfo f3=em.find(FileInfo.class, 3);
	List<FileInfo> files=new ArrayList<FileInfo>();
 
	files.add(f2);
	files.add(f3);
		return files;
	}

	@Override
	public List<FileInfo> getFiles(String fileOwner) {
		System.out.println("\n \n inside file service now.... lets see now");
 
		List<FileInfo> files = em.createQuery("Select t from fileInfo t").getResultList();
		System.out.println("\n \n inside file service now.... lets see now");

		if (null == files) {
			System.out.println("\n \n this is null");

		} else {
			System.out.println("\n \n check the size below");

			System.out.println("the size" + files.size());
		}
		
		System.out.println("\n \n null is tested");
		return files;
	}

}
