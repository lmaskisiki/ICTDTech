package infosource.open.services.routing;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.processor.aggregate.AggregationStrategy;
import org.springframework.stereotype.Component;

@Component
public class RouteManager extends RouteBuilder {
	@Override
	public void configure() throws Exception {
		// News Feeds
		from("direct:NewsFeeds").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://interfaces.webFrameApp/");
			}
		}).to("cxf:bean:NewsFeeds").marshal().json().to("stream:out");

		// get file info
		from("direct:DocManEndpoint").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://services.docman/");
			}
		}).to("cxf:bean:DocManEndpoint").marshal().json().to("stream:out");

		// user account management
		from("direct:UAService").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://services.soap.useraccount/");
			}
		}).to("cxf:bean:UAService").marshal().json().to("stream:out");
		// user profile
		from("direct:getProfile").multicast(new AggregationStrategy() {
			@Override
			public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {
				
				System.out.println("Enter Aggregator");
				System.out.println("messages : \n"+newExchange.getIn().getBody()+"::"+oldExchange.getIn().getBody());
				return oldExchange;
			}
		}).parallelProcessing().timeout(300)
				.to("direct:A" ,"direct:B").end();
				 
		   
		
		
		
		
		from("direct:A").process(new Processor() {
			@Override
			public void process(Exchange arg0) throws Exception {
				arg0.getOut().setHeader("operationName", "findByUsername");
				arg0.getOut().setBody(arg0.getIn().getBody());

				System.out.println("Message going outt "+arg0.getOut().getBody());
			}
		}).to("cxf:bean:UAService");
		///
		from("direct:B").process(new Processor() {
			@Override
			public void process(Exchange arg0) throws Exception {
			arg0.getOut().setHeader("operationName", "getFilesByOwner");
			arg0.getOut().setBody(arg0.getIn().getBody());
 			System.out.println("Message going outt "+arg0.getOut().getBody());


			}
		}).to("cxf:bean:UserDocs");
		
	}

}
