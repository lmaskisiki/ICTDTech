package infosource.routebuilders;

import infosource.aggregators.SearchAggregation;
import infosource.processors.ProcessSearchResponse;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.processor.aggregate.AggregationStrategy;

public class SearchRouteBuilder extends RouteBuilder {

	@Override
	public void configure() throws Exception {
		// from("activemq:topic:topic/clientSearch").aggregate().header("id").completionTimeout(500).to("activemq:topic:testTopic");
		//from("activemq:go").aggregate(header("id"), new SearchAggregation())
		//.to("activemq:topic:testTopic");// Camel-ID-lizo-Aspire-E1-572-51928-1459533693608-0-3
		from("direct:start").process(new Processor() {
			@Override
			public void process(Exchange msg) throws Exception {
				 msg.getIn().setHeader("tests", "aggregatorId");
				 }
		}).to("activemq:topic:topic/clientSearch?exchangePattern=InOut&replyTo=queue/SearchResponse").aggregate(constant(true), new SearchAggregation()).completionTimeout(15000).process(new ProcessSearchResponse()).to("activemq:testes");
		//from("direct:start").to("activemq:topic:topic/clientSearch?exchangePattern=InOut")
		//.process(new ProcessSearchResponse());
		//queue:///queue/SearchResponse
		//queue://queue/SearchResponse
	//	from("activemq:topic/userInfo").inOut("activemq:test5").to("activemq:test");
	}

	/*
	 * <route> <from uri="activemq:topic/userInfo" /> <setHeader
	 * headerName="lizo"> <camel:constant>lizo</camel:constant> </setHeader>
	 * <aggregate strategyMethodAllowNull="true" strategyRef="agg"
	 * completionTimeout="5000" ignoreInvalidCorrelationKeys="true">
	 * <correlationExpression> <simple>header.lizo</simple>
	 * </correlationExpression> <to uri="activemq:test"></to> </aggregate>
	 * </route>
	 */

}
