package infosource.health.mms.rest.resource;

import infosource.health.ematclinic.ioc.IOContiner;
import infosource.health.ematclinic.services.ICheckupService;
import infosource.health.ematclinic.services.IChildService;
import infosource.health.ematclinic.services.ILabourService;
import infosource.health.ematclinic.services.IPatientService;
import infosource.health.mms.models.Checkup;
import infosource.health.mms.models.Child;
import infosource.health.mms.models.Labour;
import infosource.health.mms.models.Maternity;

import java.util.List;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Singleton;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.Transactional;
import javax.ws.rs.GET;
import javax.ws.rs.Path;

import com.google.inject.Guice;
import com.google.inject.Injector;
 
  @Singleton
 public class MMSResource implements IMMSResource {
	private IPatientService matService;
	@Inject
 ICheckupService checkupService;
	private IChildService childService;
	private ILabourService labourService;
	private Injector injector;
	 
	@PostConstruct
	public void start(){
		System.out.println(checkupService.getCheckups().size()+" is the size");
	}
	//private ICheckupService cservice;
	//public ICheckupService getCservice() {
	//	return cservice;
	//}
    //
	//public void setCservice(ICheckupService cservice) {
	//	this.cservice = cservice;
	//}
    //
	//public MMSResource() {
	//	injector = Guice.createInjector(new IOContiner());
	//	this.matService = injector.getInstance(IPatientService.class);
	//	this.checkupService = injector.getInstance(ICheckupService.class);
	//	this.labourService=injector.getInstance(ILabourService.class);
	//	this.childService=injector.getInstance(IChildService.class);
	//}
    //
	public void addPatient(String jsonString) {
		 
	}

	public List<Maternity> getPatients() {
		return null;//	return matService.getPatients();
	}

	public Maternity getPatient(String Id) {
	return null;//	return matService.getPatientById(Integer.parseInt(Id));
	}

	public void addCheckup(Checkup checkup) {

	}

	public Checkup getCheckup(int checkupId) {
		return checkupService.getCheckups().iterator().next();
	// return checkupService.getCheckupById(checkupId);
	}

	public List<Checkup> getCheckups(int maternityId) {
		return null;//	return checkupService.getCheckups(maternityId);
	}

	public String home() {
		 
	return  checkupService.getCheckups().size()+":Hello, Welcome to womans' clinic. This is the manager of your maternety records.";
	}

	public void addCheckup(String jsonString) {
		// TODO Auto-generated method stub
		
	}

	public void addChild(String jsonString) {
		// TODO Auto-generated method stub
		
	}

	public List<Child> getChildrenByParent(String patientId) {
		// TODO Auto-generated method stub
		return null;
	}

	public Child getChild(String childId) {
		return null;//	return childService.getChil(Integer.parseInt(childId));
	}

	public void addLobour(String jsonString) {
		// TODO Auto-generated method stub
		
	}

	public Labour getLabour(String id) {
		return null;// return labourService.getLabour(Integer.parseInt(id));
	}

	public List<Labour> getLabour() {
		return null;//return labourService.getLabour();
	}

	 
}