package infosource.open.services.routing;

import java.util.Date;

import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.converter.jaxb.JaxbDataFormat;
import org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy;
import org.apache.camel.model.dataformat.SoapJaxbDataFormat;
import org.apache.camel.processor.aggregate.AggregationStrategy;
import org.springframework.stereotype.Component;

import useraccount.soap.services.AccountService;
import useraccount.soap.services.PersonInterface;

@Component
public class RouteManager extends RouteBuilder {
	@Override
	public void configure() throws Exception {
		
		SoapJaxbDataFormat j= new SoapJaxbDataFormat(AccountService.class.getPackage().getName(), new ServiceInterfaceStrategy(AccountService.class, false));
		from("direct:updateUser").marshal(j).to("stream:out");
		// News Feeds
		from("direct:NewsFeeds").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://interfaces.webFrameApp/");
			}
		}).to("cxf:bean:NewsFeeds").marshal().json().to("stream:out");

		// get file info
		from("direct:DocManEndpoint").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://services.docman/");
			}
		}).to("cxf:bean:DocManEndpoint").marshal().json().to("stream:out");

		// user account management
		from("direct:UAService").process(new Processor() {
			@Override
			public void process(Exchange exchange) throws Exception {
				exchange.getOut().setHeader("OperationName",
						exchange.getIn().getHeader("methodName"));
				exchange.getOut().setBody(exchange.getIn().getBody());
				exchange.getOut().setHeader("OperationNamespace",
						"http://services.soap.useraccount/");
			}
		}).to("cxf:bean:UAService").marshal().json().to("stream:out");
		// user profile
	   from("direct:getProfile")
          .multicast( new AggregateUserProfile()).parallelProcessing().timeout(5000)
         .to("direct:A" ,"direct:B")
         .end().marshal().json()
         .to("stream:out" );

	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
		from("direct:A").process(new Processor() {
			@Override
			public void process(Exchange arg0) throws Exception {
				arg0.getOut().setHeader("operationName", "findByUsername");
				arg0.getOut().setBody(arg0.getIn().getBody());
				System.out.println("Message going outA "+new Date()
						+ arg0.getOut()); 
 			}
		}).to("cxf:bean:UAService").marshal().json();

		from("direct:B").process(new Processor() {
			@Override
			public void process(Exchange arg0) throws Exception {
				arg0.getOut().setHeader("operationName", "getFilesByOwner");
				arg0.getOut().setBody(arg0.getIn().getBody());
				System.out.println("Message going outB "+new Date()
						+ arg0.getOut());			 
 

			}
		}).to("cxf:bean:DocManEndpoint").marshal().json();

	}

}
