
package webframeapp.servicelogic;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import webframeapp.interfaces.Domain;
import webframeapp.interfaces.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DomainDAO", targetNamespace = "http://interfaces.webFrameApp/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DomainDAO {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<webframeapp.interfaces.Domain>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByCategory", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindByCategory")
    @ResponseWrapper(localName = "findByCategoryResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindByCategoryResponse")
    public List<Domain> findByCategory(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<webframeapp.interfaces.Domain>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByCreator", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindByCreator")
    @ResponseWrapper(localName = "findByCreatorResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindByCreatorResponse")
    public List<Domain> findByCreator(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateDomain", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.UpdateDomain")
    @ResponseWrapper(localName = "updateDomainResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.UpdateDomainResponse")
    public boolean updateDomain();

    /**
     * 
     * @return
     *     returns java.util.List<webframeapp.interfaces.Domain>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDomains", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.GetAllDomains")
    @ResponseWrapper(localName = "getAllDomainsResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.GetAllDomainsResponse")
    public List<Domain> getAllDomains();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "purgeDomain", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.PurgeDomain")
    @ResponseWrapper(localName = "purgeDomainResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.PurgeDomainResponse")
    public boolean purgeDomain(
        @WebParam(name = "arg0", targetNamespace = "")
        Domain arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webframeapp.interfaces.Domain
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findDomain", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindDomain")
    @ResponseWrapper(localName = "findDomainResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.FindDomainResponse")
    public Domain findDomain(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "createDomain", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.CreateDomain")
    @ResponseWrapper(localName = "createDomainResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.CreateDomainResponse")
    public void createDomain(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://interfaces.webFrameApp/", className = "webframeapp.interfaces.LoginResponse")
    public boolean login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
