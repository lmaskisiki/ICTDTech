
package sessionbeans;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "FileServiceRemote", targetNamespace = "http://sessionBeans/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FileServiceRemote {


    /**
     * 
     * @param fileName
     * @param fileOwner
     * @return
     *     returns sessionbeans.FileInfo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByName", targetNamespace = "http://sessionBeans/", className = "sessionbeans.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.FindByNameResponse")
    public FileInfo findByName(
        @WebParam(name = "fileOwner", targetNamespace = "")
        String fileOwner,
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName);

    /**
     * 
     * @param localDestionation
     * @param remotePath
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadFile", targetNamespace = "http://sessionBeans/", className = "sessionbeans.DownloadFile")
    @ResponseWrapper(localName = "downloadFileResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.DownloadFileResponse")
    public boolean downloadFile(
        @WebParam(name = "remotePath", targetNamespace = "")
        String remotePath,
        @WebParam(name = "localDestionation", targetNamespace = "")
        String localDestionation);

    /**
     * 
     * @param username
     * @return
     *     returns sessionbeans.FileInfo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileByUsername", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFileByUsername")
    @ResponseWrapper(localName = "getFileByUsernameResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFileByUsernameResponse")
    public FileInfo getFileByUsername(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @return
     *     returns java.util.List<sessionbeans.FileInfo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFiles", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFiles")
    @ResponseWrapper(localName = "getFilesResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFilesResponse")
    public List<FileInfo> getFiles();

    /**
     * 
     * @param fileOwner
     * @return
     *     returns java.util.List<sessionbeans.FileInfo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFilesByOwner", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFilesByOwner")
    @ResponseWrapper(localName = "getFilesByOwnerResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFilesByOwnerResponse")
    public List<FileInfo> getFilesByOwner(
        @WebParam(name = "fileOwner", targetNamespace = "")
        String fileOwner);

    /**
     * 
     * @param fileRequest
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveRequest", targetNamespace = "http://sessionBeans/", className = "sessionbeans.SaveRequest")
    @ResponseWrapper(localName = "saveRequestResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.SaveRequestResponse")
    public boolean saveRequest(
        @WebParam(name = "fileRequest", targetNamespace = "")
        FileRequest fileRequest);

    /**
     * 
     * @param fileRequest
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeRequest", targetNamespace = "http://sessionBeans/", className = "sessionbeans.RemoveRequest")
    @ResponseWrapper(localName = "removeRequestResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.RemoveRequestResponse")
    public boolean removeRequest(
        @WebParam(name = "fileRequest", targetNamespace = "")
        FileRequest fileRequest);

    /**
     * 
     * @param shareWith
     * @param fileInfo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "shareFile", targetNamespace = "http://sessionBeans/", className = "sessionbeans.ShareFile")
    @ResponseWrapper(localName = "shareFileResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.ShareFileResponse")
    public boolean shareFile(
        @WebParam(name = "fileInfo", targetNamespace = "")
        FileInfo fileInfo,
        @WebParam(name = "shareWith", targetNamespace = "")
        String shareWith);

    /**
     * 
     * @param fileId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeFile", targetNamespace = "http://sessionBeans/", className = "sessionbeans.RemoveFile")
    @ResponseWrapper(localName = "removeFileResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.RemoveFileResponse")
    public boolean removeFile(
        @WebParam(name = "fileId", targetNamespace = "")
        int fileId);

    /**
     * 
     * @param fileId
     * @param updates
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateFile", targetNamespace = "http://sessionBeans/", className = "sessionbeans.UpdateFile")
    @ResponseWrapper(localName = "updateFileResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.UpdateFileResponse")
    public boolean updateFile(
        @WebParam(name = "fileId", targetNamespace = "")
        int fileId,
        @WebParam(name = "updates", targetNamespace = "")
        FileInfo updates);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param file
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addFile", targetNamespace = "http://sessionBeans/", className = "sessionbeans.AddFile")
    @ResponseWrapper(localName = "addFileResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.AddFileResponse")
    public boolean addFile(
        @WebParam(name = "file", targetNamespace = "")
        FileInfo file,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        InputStream arg2);

    /**
     * 
     * @param sharedWith
     * @return
     *     returns java.util.List<sessionbeans.FileShare>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSahres", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetSahres")
    @ResponseWrapper(localName = "getSahresResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetSahresResponse")
    public List<FileShare> getSahres(
        @WebParam(name = "sharedWith", targetNamespace = "")
        String sharedWith);

    /**
     * 
     * @param requestsFor
     * @return
     *     returns java.util.List<sessionbeans.FileRequest>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequests", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetRequests")
    @ResponseWrapper(localName = "getRequestsResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetRequestsResponse")
    public List<FileRequest> getRequests(
        @WebParam(name = "requestsFor", targetNamespace = "")
        String requestsFor);

    /**
     * 
     * @param requestId
     * @return
     *     returns sessionbeans.FileRequest
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRequestById", targetNamespace = "http://sessionBeans/", className = "sessionbeans.FindRequestById")
    @ResponseWrapper(localName = "findRequestByIdResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.FindRequestByIdResponse")
    public FileRequest findRequestById(
        @WebParam(name = "requestId", targetNamespace = "")
        int requestId);

    /**
     * 
     * @param fileId
     * @param username
     * @return
     *     returns sessionbeans.FileInfo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileById", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFileById")
    @ResponseWrapper(localName = "getFileByIdResponse", targetNamespace = "http://sessionBeans/", className = "sessionbeans.GetFileByIdResponse")
    public FileInfo getFileById(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "fileId", targetNamespace = "")
        int fileId);

}
